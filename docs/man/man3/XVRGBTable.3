.TH XVRGBTable 3 "26 Oct 2007" "XVision" \" -*- nroff -*-
.ad l
.nh
.SH NAME
XVRGBTable \- XVRGBTable. 
.SH SYNOPSIS
.br
.PP
\fC#include <XVLookupTable.h>\fR
.PP
Inherits XVLookupTable.
.PP
Inherited by \fBXVHueRangeTable\fR\fC [virtual]\fR, \fBXVHueSectorTable\fR\fC [virtual]\fR, \fBXVRGBConversionTable\fR, and \fBXVRGBDistanceTable\fR\fC [virtual]\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBXVRGBTable\fR ()"
.br
.ti -1c
.RI "void \fBbuildTable\fR ()"
.br
.ti -1c
.RI "Y \fBoperator[]\fR (const XV_RGB15)"
.br
.ti -1c
.RI "Y \fBoperator()\fR (const XV_RGB15)"
.br
.ti -1c
.RI "Y \fBoperator[]\fR (const XV_RGB16)"
.br
.ti -1c
.RI "Y \fBoperator()\fR (const XV_RGB16)"
.br
.ti -1c
.RI "Y \fBoperator[]\fR (const XV_RGB24)"
.br
.ti -1c
.RI "Y \fBoperator()\fR (const XV_RGB24)"
.br
.ti -1c
.RI "Y \fBoperator[]\fR (const XV_RGBA32)"
.br
.ti -1c
.RI "Y \fBoperator()\fR (const XV_RGBA32)"
.br
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "virtual Y \fBcomputeValue\fR (T pixel) = 0"
.br
.ti -1c
.RI "Y& \fBtableElement\fR (const XV_RGB15 p)"
.br
.ti -1c
.RI "Y& \fBtableElement\fR (const XV_RGB16 p)"
.br
.ti -1c
.RI "Y& \fBtableElement\fR (const XV_RGB24 p)"
.br
.ti -1c
.RI "Y& \fBtableElement\fR (const XV_RGBA32 p)"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class T, class Y>  template class XVRGBTable
XVRGBTable.
.PP
\fBAuthor(s): \fR
.in +1c
 Sam Lang 
.PP
\fBVersion: \fR
.in +1c
 
.PP
\fBId: \fR XVLookupTable.h,v 1.4 2005/02/22 02:35:54 cvsuser Exp 
.PP
Fast lookup table for RGB pixels to some value (hue, YUV, etc.). This class is templated on the RGB pixel type and the result type. The RGB pixel type can be any of the XV_RGB* structures specified in XVPixel.h.
.PP
Since a 24 or 32 bit lookup table would be restrictively large (16 Megs, and 2.4 Gigs respectively), the access ([] and ()) operators bitshift the 24 and 32 bit pixels down to a 16 bit value. This means that its not really worthwile to have 24 or 32 bit pixels if you are just going to pass them through an XVRGBTable, because the precision in the larger bit pixel is lost. For completeness though, the 24 and 32 bit pixel conversions exist. 
.PP
Definition at line 158 of file XVLookupTable.h.
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS template<classT, classY> XVRGBTable<T, Y>::XVRGBTable<T, Y> ()
.PP
Definition at line 177 of file XVLookupTable.h.
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS template<classT, classY> Y & XVRGBTable<T, Y>::tableElement (const XV_RGB15 p)\fC [inline, protected]\fR
.PP
Definition at line 166 of file XVLookupTable.h.
.SS template<classT, classY> Y & XVRGBTable<T, Y>::tableElement (const XV_RGB16 p)\fC [inline, protected]\fR
.PP
Definition at line 167 of file XVLookupTable.h.
.SS template<classT, classY> Y & XVRGBTable<T, Y>::tableElement (const XV_RGB24 p)\fC [inline, protected]\fR
.PP
Definition at line 168 of file XVLookupTable.h.
.SS template<classT, classY> Y & XVRGBTable<T, Y>::tableElement (const XV_RGBA32 p)\fC [inline, protected]\fR
.PP
Definition at line 171 of file XVLookupTable.h.
.SS template<classT, classY> void XVRGBTable< T,Y >::buildTable (void)
.PP
Definition at line 23 of file XVLookupTable.icc.
.SS template<classT, classY> Y XVRGBTable< T,Y >::operator[] (const pixel)\fC [inline]\fR
.PP
Definition at line 68 of file XVLookupTable.icc.
.SS template<classT, classY> Y XVRGBTable< T,Y >::operator() (const pixel)\fC [inline]\fR
.PP
Definition at line 73 of file XVLookupTable.icc.
.SS template<classT, classY> Y XVRGBTable< T,Y >::operator[] (const pixel)\fC [inline]\fR
.PP
Definition at line 68 of file XVLookupTable.icc.
.SS template<classT, classY> Y XVRGBTable< T,Y >::operator() (const pixel)\fC [inline]\fR
.PP
Definition at line 73 of file XVLookupTable.icc.
.SS template<classT, classY> Y XVRGBTable< T,Y >::operator[] (const pixel)\fC [inline]\fR
.PP
Definition at line 68 of file XVLookupTable.icc.
.SS template<classT, classY> Y XVRGBTable< T,Y >::operator() (const pixel)\fC [inline]\fR
.PP
Definition at line 73 of file XVLookupTable.icc.
.SS template<classT, classY> Y XVRGBTable< T,Y >::operator[] (const pixel)\fC [inline]\fR
.PP
Definition at line 68 of file XVLookupTable.icc.
.SS template<classT, classY> Y XVRGBTable< T,Y >::operator() (const pixel)\fC [inline]\fR
.PP
Definition at line 73 of file XVLookupTable.icc.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for XVision from the source code.